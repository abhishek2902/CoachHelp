import { Id, Optional } from '@ephox/katamari';
const modeId = Id.generate('mode');
const setMode = (mode) => (transfer) => {
    const dt = transfer;
    dt[modeId] = mode;
};
const checkMode = (expectedMode) => (transfer) => {
    const dt = transfer;
    return Optional.from(dt[modeId]).exists((mode) => mode === expectedMode);
};
const setReadWriteMode = setMode(0 /* Mode.ReadWrite */);
const setProtectedMode = setMode(1 /* Mode.Protected */);
const setReadOnlyMode = setMode(2 /* Mode.ReadOnly */);
const isInReadWriteMode = checkMode(0 /* Mode.ReadWrite */);
const isInProtectedMode = checkMode(1 /* Mode.Protected */);
const isInReadOnlyMode = checkMode(2 /* Mode.ReadOnly */);
export { setReadWriteMode, setProtectedMode, setReadOnlyMode, isInReadWriteMode, isInProtectedMode, isInReadOnlyMode };
//# sourceMappingURL=Mode.js.map