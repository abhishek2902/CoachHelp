import { SugarElement } from '@ephox/sugar';
import { ArbitraryDetail, StructureDetail } from './ArbSchemaTypes';
export declare const ArbSchema: {
    whitespace: ArbitraryDetail<SugarElement<Text>>;
    formatting: import("./ArbSchemaTypes").TagsDetail & import("./ArbChildrenSchema").CompositeDetail & {
        readonly type: "composite";
    };
    inline: import("./ArbSchemaTypes").TagsDetail & import("./ArbChildrenSchema").CompositeDetail & {
        readonly type: "composite";
    };
    netext: ArbitraryDetail<SugarElement<Text>>;
    anytext: ArbitraryDetail<SugarElement<Text>>;
    container: import("./ArbSchemaTypes").TagsDetail & import("./ArbChildrenSchema").CompositeDetail & {
        readonly type: "composite";
    };
    listitem: import("./ArbSchemaTypes").TagDetail & import("./ArbChildrenSchema").CompositeDetail & {
        readonly type: "composite";
    };
    list: import("./ArbSchemaTypes").TagsDetail & import("./ArbChildrenSchema").CompositeDetail & {
        readonly type: "composite";
    };
    table: StructureDetail;
    tbody: import("./ArbSchemaTypes").TagDetail & import("./ArbChildrenSchema").CompositeDetail & {
        readonly type: "composite";
    };
    thead: import("./ArbSchemaTypes").TagDetail & import("./ArbChildrenSchema").CompositeDetail & {
        readonly type: "composite";
    };
    tfoot: import("./ArbSchemaTypes").TagDetail & import("./ArbChildrenSchema").CompositeDetail & {
        readonly type: "composite";
    };
    tr: import("./ArbSchemaTypes").TagDetail & import("./ArbChildrenSchema").CompositeDetail & {
        readonly type: "composite";
    };
    tablecell: import("./ArbSchemaTypes").TagsDetail & import("./ArbChildrenSchema").CompositeDetail & {
        readonly type: "composite";
    };
    caption: import("./ArbSchemaTypes").TagDetail & import("./ArbChildrenSchema").CompositeDetail & {
        readonly type: "composite";
    };
    image: ArbitraryDetail<SugarElement<HTMLElement>>;
    comment: ArbitraryDetail<SugarElement<Comment>>;
    zerowidth: ArbitraryDetail<SugarElement<Text>>;
    zerowidths: ArbitraryDetail<SugarElement<Text>>;
};
export type ArbSchema = typeof ArbSchema;
//# sourceMappingURL=ArbSchema.d.ts.map