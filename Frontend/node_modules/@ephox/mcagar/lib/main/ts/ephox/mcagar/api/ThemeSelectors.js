import { Arr, Fun, Global, Obj } from '@ephox/katamari';
import { get as getOption } from '../alien/Options';
const isSilver = () => {
    const tinymce = Global.tinymce;
    if (!tinymce) {
        throw new Error('Failed to get global tinymce');
    }
    return Obj.has(tinymce.activeEditor, 'ui');
};
const isModern = () => !isSilver();
const ModernThemeSelectors = {
    toolBarSelector: Fun.constant('.mce-toolbar-grp'),
    menuBarSelector: '.mce-menubar',
    dialogSelector: '.mce-window',
    dialogCancelSelector: 'div[role="button"]:contains(Cancel)',
    dialogCloseSelector: 'button.mce-close',
    dialogSubmitSelector: 'div[role="button"].mce-primary'
};
const SilverThemeSelectors = {
    toolBarSelector: (editor) => Arr.exists([getOption(editor, 'toolbar_mode'), getOption(editor, 'toolbar_drawer')], (s) => s === 'floating' || s === 'sliding') ? '.tox-toolbar-overlord' : '.tox-toolbar',
    menuBarSelector: '.tox-menubar',
    dialogSelector: 'div[role="dialog"]',
    dialogCancelSelector: '.tox-button:contains("Cancel")',
    dialogCloseSelector: '.tox-button[title="Close"]',
    dialogSubmitSelector: '.tox-button:contains("Save")'
};
const getThemeSelectors = () => isModern() ? ModernThemeSelectors : SilverThemeSelectors;
export { getThemeSelectors, isModern, isSilver };
//# sourceMappingURL=ThemeSelectors.js.map