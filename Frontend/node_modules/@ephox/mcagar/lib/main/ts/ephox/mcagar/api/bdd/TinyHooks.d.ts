import { SugarElement } from '@ephox/sugar';
import { Editor as EditorType } from '../../alien/EditorTypes';
export interface Hook<T extends EditorType> {
    readonly editor: () => T;
}
export interface ShadowRootHook<T extends EditorType> extends Hook<T> {
    readonly shadowRoot: () => SugarElement<ShadowRoot>;
}
export interface SetupElement {
    readonly element: SugarElement<HTMLElement>;
    readonly teardown: () => void;
}
declare const bddSetup: <T extends EditorType = EditorType>(settings: Record<string, any>, setupModules?: Array<() => void>, focusOnInit?: boolean) => Hook<T>;
declare const bddSetupLight: <T extends EditorType = EditorType>(settings: Record<string, any>, setupModules?: Array<() => void>, focusOnInit?: boolean) => Hook<T>;
declare const bddSetupFromElement: <T extends EditorType = EditorType>(settings: Record<string, any>, setupElement: () => SetupElement, setupModules?: Array<() => void>, focusOnInit?: boolean) => Hook<T>;
declare const bddSetupInShadowRoot: <T extends EditorType = EditorType>(settings: Record<string, any>, setupModules?: Array<() => void>, focusOnInit?: boolean) => ShadowRootHook<T>;
export { bddSetup, bddSetupLight, bddSetupFromElement, bddSetupInShadowRoot };
//# sourceMappingURL=TinyHooks.d.ts.map