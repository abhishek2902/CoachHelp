export interface Adt {
    readonly fold: <T>(...caseHandlers: ((...data: any[]) => T)[]) => T;
    readonly match: <T>(branches: {
        [branch: string]: (...data: any[]) => T;
    }) => T;
    readonly log: (label: string) => void;
}
export declare const Adt: {
    generate: <T = Record<string, (...data: any[]) => Adt>>(cases: {
        [key: string]: string[];
    }[]) => T;
};
//# sourceMappingURL=Adt.d.ts.map