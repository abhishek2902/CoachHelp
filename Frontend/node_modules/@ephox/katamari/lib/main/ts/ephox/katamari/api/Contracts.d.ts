export interface ContractCondition<T> {
    readonly label: string;
    readonly validate: (value: T, key: string) => boolean;
}
type IdentityFn = <T extends Record<string, any>>(obj: T) => T;
type IdentityWithConditionFn<V> = <T extends Record<string, V>>(obj: T) => T;
export declare const exactly: (required: string[]) => IdentityFn;
export declare const ensure: (required: string[]) => IdentityFn;
export declare const ensureWith: <V>(required: string[], condition: ContractCondition<V>) => IdentityWithConditionFn<V>;
export {};
//# sourceMappingURL=Contracts.d.ts.map