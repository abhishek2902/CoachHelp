import { Step } from '@ephox/agar';
import { Arr, Obj } from '@ephox/katamari';
import { getTinymce } from './Globals';
const readAllPlugins = () => getTinymce().map((tinymce) => Obj.mapToArray(tinymce.PluginManager.lookup, (plugin, name) => ({
    name,
    instance: plugin.instance,
    url: Obj.get(tinymce.PluginManager.urls, name)
}))).getOr([]);
const readPlugins = (pluginNames) => Arr.filter(readAllPlugins(), (plugin) => Arr.contains(pluginNames, plugin.name));
const registerPlugins = (plugins) => {
    getTinymce().each((tinymce) => {
        Arr.each(plugins, (plugin) => {
            plugin.url.each((url) => tinymce.PluginManager.urls[plugin.name] = url);
            tinymce.PluginManager.add(plugin.name, plugin.instance);
        });
    });
};
const sRegisterPlugins = (plugins) => Step.sync(() => registerPlugins(plugins));
export { readAllPlugins, readPlugins, registerPlugins, sRegisterPlugins };
//# sourceMappingURL=Plugins.js.map