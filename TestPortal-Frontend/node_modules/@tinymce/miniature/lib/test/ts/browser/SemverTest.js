import { Assert, UnitTest } from '@ephox/bedrock-client';
import * as Semver from 'tinymce/miniature/ver/Semver';
UnitTest.test('SemverTest', () => {
    const assertSemverCompare = (expected, input, versionString) => {
        Assert.eq('', expected, Semver.compare(input, Semver.parse(versionString)));
    };
    // patch
    assertSemverCompare(-1 /* Semver.Comparison.LT */, Semver.nu(1, 1, 1), '1.1.2');
    assertSemverCompare(0 /* Semver.Comparison.EQ */, Semver.nu(1, 1, 1), '1.1.1');
    assertSemverCompare(1 /* Semver.Comparison.GT */, Semver.nu(1, 1, 1), '1.1.0');
    assertSemverCompare(-1 /* Semver.Comparison.LT */, Semver.nu(1, 1, 0), '1.1.1');
    assertSemverCompare(1 /* Semver.Comparison.GT */, Semver.nu(1, 1, 2), '1.1.1');
    // minor
    assertSemverCompare(-1 /* Semver.Comparison.LT */, Semver.nu(1, 1, 1), '1.2.1');
    assertSemverCompare(0 /* Semver.Comparison.EQ */, Semver.nu(1, 1, 1), '1.1.1');
    assertSemverCompare(1 /* Semver.Comparison.GT */, Semver.nu(1, 1, 1), '1.0.1');
    assertSemverCompare(-1 /* Semver.Comparison.LT */, Semver.nu(1, 0, 1), '1.1.1');
    assertSemverCompare(1 /* Semver.Comparison.GT */, Semver.nu(1, 2, 1), '1.1.1');
    // major
    assertSemverCompare(-1 /* Semver.Comparison.LT */, Semver.nu(1, 1, 1), '2.1.1');
    assertSemverCompare(0 /* Semver.Comparison.EQ */, Semver.nu(1, 1, 1), '1.1.1');
    assertSemverCompare(1 /* Semver.Comparison.GT */, Semver.nu(1, 1, 1), '0.1.1');
    assertSemverCompare(-1 /* Semver.Comparison.LT */, Semver.nu(0, 1, 1), '1.1.1');
    assertSemverCompare(1 /* Semver.Comparison.GT */, Semver.nu(2, 1, 1), '1.1.1');
});
//# sourceMappingURL=SemverTest.js.map