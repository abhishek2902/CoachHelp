import { Keyboard } from '@ephox/agar';
import { SugarElement } from '@ephox/sugar';
import { Editor } from '../../alien/EditorTypes';
declare const getUiRoot: (editor: Editor) => SugarElement<HTMLElement | ShadowRoot>;
declare const clickOnToolbar: <T extends Element>(editor: Editor, selector: string) => SugarElement<T>;
declare const tapOnToolbar: <T extends Element>(editor: Editor, selector: string) => SugarElement<T>;
declare const clickOnMenu: <T extends Element>(editor: Editor, selector: string) => SugarElement<T>;
declare const clickOnUi: <T extends Element>(editor: Editor, selector: string) => SugarElement<T>;
declare const submitDialog: (editor: Editor, selector?: string) => void;
declare const cancelDialog: (editor: Editor, selector?: string) => void;
declare const closeDialog: (editor: Editor, selector?: string) => void;
declare const pWaitForUi: (editor: Editor, selector: string) => Promise<SugarElement<Element>>;
declare const pWaitForPopup: (editor: Editor, selector: string) => Promise<SugarElement<HTMLElement>>;
declare const pWaitForDialog: (editor: Editor, selector?: string) => Promise<SugarElement<Element>>;
declare const pTriggerContextMenu: (editor: Editor, target: string, menu: string) => Promise<void>;
declare const keydown: (editor: Editor, keyvalue: number, modifiers?: Keyboard.KeyModifiers) => void;
declare const keyup: (editor: Editor, keyvalue: number, modifiers?: Keyboard.KeyModifiers) => void;
declare const keypress: (editor: Editor, keyvalue: number, modifiers?: Keyboard.KeyModifiers) => void;
declare const keystroke: (editor: Editor, keyvalue: number, modifiers?: Keyboard.KeyModifiers) => void;
export { clickOnToolbar, clickOnMenu, clickOnUi, tapOnToolbar, submitDialog, cancelDialog, closeDialog, keydown, keypress, keystroke, keyup, pWaitForDialog, pWaitForPopup, pWaitForUi, pTriggerContextMenu, getUiRoot };
//# sourceMappingURL=TinyUiActions.d.ts.map