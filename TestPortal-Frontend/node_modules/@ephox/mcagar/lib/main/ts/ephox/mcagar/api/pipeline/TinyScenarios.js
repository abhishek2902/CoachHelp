import { Generators, PropertySteps } from '@ephox/agar';
import { Html, SugarElement } from '@ephox/sugar';
export const TinyScenarios = (editor) => {
    // We can't just generate a scenario because normalisation is going to cause issues
    // with getting a selection.
    const genScenario = (genContent, selectionExclusions) => {
        return genContent.chain((structure) => {
            const html = Html.getOuter(structure);
            editor.setContent(html);
            return Generators.selection(SugarElement.fromDom(editor.getBody()), selectionExclusions).map((selection) => {
                const win = editor.selection.win;
                const rng = win.document.createRange();
                rng.setStart(selection.start.dom, selection.soffset);
                rng.setEnd(selection.finish.dom, selection.foffset);
                editor.selection.setRng(rng);
                return {
                    input: html,
                    selection
                };
            });
        });
    };
    const arbScenario = (genContent, options) => genScenario(genContent, options.exclusions);
    const sAsyncProperty = (label, generator, step, options) => {
        return PropertySteps.sAsyncProperty(label, [
            arbScenario(generator, options.scenario)
        ], step, options.property);
    };
    return {
        genScenario,
        arbScenario,
        sAsyncProperty
    };
};
//# sourceMappingURL=TinyScenarios.js.map