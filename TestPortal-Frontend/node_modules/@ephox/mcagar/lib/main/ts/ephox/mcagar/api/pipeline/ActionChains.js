import { Chain, FocusTools, Keyboard, NamedChain } from '@ephox/agar';
import { Fun } from '@ephox/katamari';
import { SugarElement } from '@ephox/sugar';
const cIDoc = Chain.mapper((editor) => {
    return SugarElement.fromDom(editor.getDoc());
});
const cUiDoc = Chain.injectThunked(() => {
    return SugarElement.fromDom(document);
});
const cTriggerKeyEvent = (cTarget, evtType, code, modifiers = {}) => {
    return NamedChain.asChain([
        NamedChain.direct(NamedChain.inputName(), cTarget, 'doc'),
        NamedChain.direct('doc', FocusTools.cGetFocused, 'activeElement'),
        NamedChain.direct('activeElement', Chain.op((dispatcher) => {
            Keyboard[evtType](code, modifiers, dispatcher);
        }), '_'),
        NamedChain.output(NamedChain.inputName())
    ]);
};
export const ActionChains = {
    cContentKeypress: Fun.curry(cTriggerKeyEvent, cIDoc, 'keypress'),
    cContentKeydown: Fun.curry(cTriggerKeyEvent, cIDoc, 'keydown'),
    cContentKeystroke: Fun.curry(cTriggerKeyEvent, cIDoc, 'keystroke'),
    cUiKeydown: Fun.curry(cTriggerKeyEvent, cUiDoc, 'keydown')
};
//# sourceMappingURL=ActionChains.js.map