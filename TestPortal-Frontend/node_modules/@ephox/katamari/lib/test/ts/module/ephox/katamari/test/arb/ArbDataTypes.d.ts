import fc from 'fast-check';
import { Future } from 'ephox/katamari/api/Future';
import { Optional } from 'ephox/katamari/api/Optional';
import { Result } from 'ephox/katamari/api/Result';
type Arbitrary<A> = fc.Arbitrary<A>;
export declare const arbResultError: <A = never, E = any>(arbE: Arbitrary<E>) => Arbitrary<Result<A, E>>;
export declare const arbResultValue: <A, E = never>(arbA: Arbitrary<A>) => Arbitrary<Result<A, E>>;
export declare const arbResult: <A, E>(arbA: Arbitrary<A>, arbE: Arbitrary<E>) => Arbitrary<Result<A, E>>;
export declare const arbOptionalNone: <T>() => Arbitrary<Optional<T>>;
export declare const arbOptionalSome: <T>(at: Arbitrary<T>) => Arbitrary<Optional<T>>;
export declare const arbOptional: <T>(at: Arbitrary<T>) => Arbitrary<Optional<T>>;
export declare const arbNegativeInteger: () => Arbitrary<number>;
export declare const arbFutureNow: <A>(arbA: Arbitrary<A>) => Arbitrary<Future<A>>;
export declare const arbFutureSoon: <A>(arbA: Arbitrary<A>) => Arbitrary<Future<A>>;
export declare const arbFutureNever: <A>() => Arbitrary<Future<A>>;
export declare const arbFutureNowOrSoon: <A>(arbA: Arbitrary<A>) => Arbitrary<Future<A>>;
export {};
//# sourceMappingURL=ArbDataTypes.d.ts.map