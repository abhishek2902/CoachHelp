export interface LazyValue<T> {
    readonly get: (callback: (value: T) => void) => void;
    readonly map: <U>(mapper: (value: T) => U) => LazyValue<U>;
    readonly isReady: () => boolean;
}
export declare const LazyValue: {
    nu: <T>(baseFn: (completer: (value: T) => void) => void) => LazyValue<T>;
    pure: <T_1>(a: T_1) => LazyValue<T_1>;
};
//# sourceMappingURL=LazyValue.d.ts.map