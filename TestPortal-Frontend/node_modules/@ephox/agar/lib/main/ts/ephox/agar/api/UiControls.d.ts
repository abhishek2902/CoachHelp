import { SugarElement } from '@ephox/sugar';
import { Chain } from './Chain';
import { Step } from './Step';
type TogglableElement = HTMLInputElement | HTMLTextAreaElement | HTMLSelectElement | HTMLOptionElement | HTMLButtonElement;
declare const setValue: (element: SugarElement<TogglableElement>, newValue: string, eventName?: string) => void;
declare const setValueOn: (container: SugarElement<Node>, selector: string, newValue: string, eventName?: string) => void;
declare const getValue: (element: SugarElement<TogglableElement>) => string;
declare const cSetValue: <T extends TogglableElement>(newValue: string) => Chain<SugarElement<T>, SugarElement<T>>;
declare const cGetValue: Chain<SugarElement<TogglableElement>, string>;
declare const sSetValue: <T>(element: SugarElement<TogglableElement>, newValue: string) => Step<T, T>;
declare const sSetValueOn: <T>(container: SugarElement<Node>, selector: string, newValue: string) => Step<T, T>;
export { setValue, setValueOn, getValue, sSetValueOn, sSetValue, cSetValue, cGetValue };
//# sourceMappingURL=UiControls.d.ts.map