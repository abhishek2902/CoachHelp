import { SugarElement } from '@ephox/sugar';
import { MixedKeyModifiers } from '../keyboard/FakeKeys';
import { Step } from './Step';
export type KeyModifiers = MixedKeyModifiers;
declare const keydown: (value: number, modifiers: KeyModifiers, dispatcher: SugarElement<Node>) => void;
declare const keyup: (value: number, modifiers: KeyModifiers, dispatcher: SugarElement<Node>) => void;
declare const keypress: (value: number, modifiers: KeyModifiers, dispatcher: SugarElement<Node>) => void;
declare const keystroke: (value: number, modifiers: KeyModifiers, dispatcher: SugarElement<Node>) => void;
declare const activeKeydown: (doc: SugarElement<Document | ShadowRoot>, value: number, modifiers?: KeyModifiers) => void;
declare const activeKeyup: (doc: SugarElement<Document | ShadowRoot>, value: number, modifiers?: KeyModifiers) => void;
declare const activeKeypress: (doc: SugarElement<Document | ShadowRoot>, value: number, modifiers?: KeyModifiers) => void;
declare const activeKeystroke: (doc: SugarElement<Document | ShadowRoot>, value: number, modifiers?: KeyModifiers) => void;
declare const sKeydown: <T>(doc: SugarElement<Document | ShadowRoot>, keyvalue: number, modifiers?: KeyModifiers) => Step<T, T>;
declare const sKeyup: <T>(doc: SugarElement<Document | ShadowRoot>, keyvalue: number, modifiers?: KeyModifiers) => Step<T, T>;
declare const sKeypress: <T>(doc: SugarElement<Document | ShadowRoot>, keyvalue: number, modifiers?: KeyModifiers) => Step<T, T>;
declare const sKeystroke: <T>(doc: SugarElement<Document | ShadowRoot>, keyvalue: number, modifiers?: KeyModifiers) => Step<T, T>;
export { keydown, keyup, keypress, keystroke, activeKeydown, activeKeyup, activeKeypress, activeKeystroke, sKeydown, sKeyup, sKeypress, sKeystroke };
//# sourceMappingURL=Keyboard.d.ts.map