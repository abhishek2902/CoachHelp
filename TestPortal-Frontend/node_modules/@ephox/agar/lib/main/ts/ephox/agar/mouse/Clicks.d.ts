import { SugarElement } from '@ephox/sugar';
declare const leftClickButton = 0;
declare const middleClickButton = 1;
declare const rightClickButton = 2;
declare const leftClickButtons = 1;
declare const rightClickButtons = 2;
declare const middleClickButtons = 4;
interface Settings {
    dx?: number;
    dy?: number;
    button?: number;
    buttons?: number;
    ctrlKey?: boolean;
    shiftKey?: boolean;
    altKey?: boolean;
    metaKey?: boolean;
    bubbles?: boolean;
    cancelable?: boolean;
    detail?: number;
}
type EventType = 'click' | 'mousedown' | 'mouseup' | 'mousemove' | 'mouseover' | 'mouseout' | 'contextmenu';
declare const event: (type: EventType, { dx, dy, ...settings }: Settings) => (element: SugarElement<Node>) => void;
declare const click: (settings: Settings) => (element: SugarElement<Node>) => void;
declare const mouseDown: (restArgs_0: Settings) => (element: SugarElement<Node>) => void;
declare const mouseUp: (restArgs_0: Settings) => (element: SugarElement<Node>) => void;
declare const mouseMove: (restArgs_0: Settings) => (element: SugarElement<Node>) => void;
declare const mouseOver: (restArgs_0: Settings) => (element: SugarElement<Node>) => void;
declare const mouseOut: (restArgs_0: Settings) => (element: SugarElement<Node>) => void;
declare const contextMenu: (settings: Settings) => (element: SugarElement<Node>) => void;
declare const trigger: (element: SugarElement<HTMLElement>) => void;
declare const point: (type: string, button: number, element: SugarElement<Node>, x: number, y: number) => void;
export { event, Settings, EventType, leftClickButton, middleClickButton, rightClickButton, leftClickButtons, rightClickButtons, middleClickButtons, click, mouseDown, mouseUp, mouseMove, mouseOver, mouseOut, contextMenu, point, trigger };
//# sourceMappingURL=Clicks.d.ts.map