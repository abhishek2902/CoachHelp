type Task = () => void;
export interface Cleaner {
    readonly add: (task: Task) => void;
    readonly run: () => void;
    readonly wrap: <T extends any[], U>(fn: (...a: T) => U) => (...args: T) => U;
}
export declare const Cleaner: () => Cleaner;
export {};
//# sourceMappingURL=Cleaner.d.ts.map